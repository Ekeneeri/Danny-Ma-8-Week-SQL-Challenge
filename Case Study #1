-- 1. What is the total amount each customer spent at the restaurant?

SELECT customer_id AS customer, SUM(price) AS total_amount
FROM dannys_diner.menu
  INNER JOIN dannys_diner.sales
	  USING(product_id)
GROUP BY sales.customer_id;

-- 2. How many days has each customer visited the restaurant?

SELECT customer_id AS customer, COUNT(DISTINCT(order_date)) AS visits
FROM dannys_diner.sales
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?

WITH first_item AS (
   SELECT customer_id, MIN(order_date) AS first_date
   FROM dannys_diner.sales AS s
   GROUP BY customer_id
)
SELECT s.customer_id AS customer, product_name AS item 
FROM dannys_diner.sales AS s
INNER JOIN first_item AS f
	ON s.customer_id = f.customer_id AND s.order_date = f.first_date
INNER JOIN dannys_diner.menu
	USING(product_id)
ORDER BY 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

WITH most_purchase AS (
  SELECT MAX(DISTINCT(product_id)) AS purchase_times
  FROM dannys_diner.sales
)
SELECT product_name, COUNT(purchase_times)
FROM dannys_diner.menu AS m
INNER JOIN most_purchase AS p
	ON m.product_id = p.purchase_times
INNER JOIN dannys_diner.sales
	USING(product_id)
GROUP BY product_name;

-- 5. Which item was the most popular for each customer?

WITH product_purchase AS (
  SELECT customer_id, product_name, RANK() OVER (PARTITION BY customer_id ORDER BY COUNT(product_id) DESC) AS purchase_freq
  FROM dannys_diner.sales
  	INNER JOIN dannys_diner.menu 
  	USING(product_id)
  GROUP BY customer_id, product_name
)
SELECT customer_id, product_name
  FROM (
    SELECT p.*
    FROM product_purchase AS p    
  ) AS sub
WHERE purchase_freq = 1
ORDER BY customer_id;

